<UserControl x:Class="SmartView2.Views.MultimediaInner.MusicPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ml="clr-namespace:SmartView2.Native.MediaLibrary" 
             xmlns:common="clr-namespace:SmartView2.Common" 
             xmlns:b="clr-namespace:SmartView2.Behaviors" 
             xmlns:converter="clr-namespace:SmartView2.Converters" 
             xmlns:animation="clr-namespace:SmartView2.Resources.Animation" 
             xmlns:views="clr-namespace:SmartView2.Views" 
             xmlns:innerViews="clr-namespace:SmartView2.Views.MultimediaInner">
  <Interaction.Behaviors>
    <VisualStateBehavior VisualStateSource="{Binding ViewType}" />
  </Interaction.Behaviors>
  <UserControl.Resources>
    <common:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converter:ImageWithDefaultSourceConverter x:Key="AlbumConverter" DefaultSource="pack://application:,,,/Resources/Images/Music_album_default.png" />
    <converter:ImageWithDefaultSourceConverter x:Key="ArtistConverter" DefaultSource="pack://application:,,,/Resources/Images/Music_artist_default.png" />
    <converter:ImageWithDefaultSourceConverter x:Key="GenreConverter" DefaultSource="pack://application:,,,/Resources/Images/Music_genre_default.png" />
    <converter:ImageWithDefaultSourceConverter x:Key="TrackConverter" DefaultSource="pack://application:,,,/Resources/Images/Music_track_default.png" />
    <converter:ImageWithDefaultSourceConverter x:Key="TrackInFolderConverter" DefaultSource="pack://application:,,,/Resources/Images/indicator_music_nor.png" />
    <common:TimeSpanToStringConverter x:Key="TimeSpanConverter" />
    <common:BoolToBoolNegativeConverter x:Key="negativeConverter" />
    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
    </Style>
    <Color x:Key="AlbumBgr">#1C202B</Color>
    <Color x:Key="ArtistTitle">#8A8E97</Color>
    <Color x:Key="ArtistTitleBgr">#29303A</Color>
    <Color x:Key="BorderColor">#292D36</Color>
    <Color x:Key="MusicBgColor">#232732</Color>
    <SolidColorBrush x:Key="AlbumBgrBrush" Color="{StaticResource AlbumBgr}" />
    <SolidColorBrush x:Key="ArtistTitleBrush" Color="{StaticResource ArtistTitle}" />
    <SolidColorBrush x:Key="ArtistTitleBgrBrush" Color="{StaticResource ArtistTitleBgr}" />
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}" />
    <SolidColorBrush x:Key="MusicBgBrush" Color="{StaticResource MusicBgColor}" />
    <CollectionViewSource x:Key="ArtistByNameView" Source="{Binding ArtistList}">
      <CollectionViewSource.GroupDescriptions>
        <PropertyGroupDescription PropertyName="ArtistFirstLetter" />
      </CollectionViewSource.GroupDescriptions>
    </CollectionViewSource>
    <CollectionViewSource x:Key="TrackByArtistView" Source="{Binding TracksList}">
      <CollectionViewSource.GroupDescriptions>
        <PropertyGroupDescription PropertyName="Artist" />
      </CollectionViewSource.GroupDescriptions>
    </CollectionViewSource>
    <CollectionViewSource x:Key="TrackByAlbumView" Source="{Binding TracksList}">
      <CollectionViewSource.GroupDescriptions>
        <PropertyGroupDescription PropertyName="Album" />
      </CollectionViewSource.GroupDescriptions>
    </CollectionViewSource>
    <CollectionViewSource x:Key="GenreByNameView" Source="{Binding GenresList}">
      <CollectionViewSource.GroupDescriptions>
        <PropertyGroupDescription PropertyName="GenreFirstLetter" />
      </CollectionViewSource.GroupDescriptions>
    </CollectionViewSource>
    <CollectionViewSource x:Key="GenreDetailedByName" Source="{Binding TracksList}">
      <CollectionViewSource.GroupDescriptions>
        <PropertyGroupDescription PropertyName="TrackFirstLetter" />
      </CollectionViewSource.GroupDescriptions>
    </CollectionViewSource>
  </UserControl.Resources>
  <Grid AllowDrop="True" Background="#00FFFFFF">
    <Grid.Style>
      <Style TargetType="{x:Type Grid}">
        <Setter Property="FrameworkElement.ContextMenu">
          <Setter.Value>
            <ContextMenu Foreground="#FF000000" DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
              <MenuItem Header="{Binding COM_SID_ADD_FILE, Source={StaticResource LocalizationSource}}" Command="{Binding DataContext.AddMusicFilesCommand}" />
              <MenuItem Header="{Binding COM_SID_ADD_FOLDER, Source={StaticResource LocalizationSource}}" Command="{Binding DataContext.AddFolderCommand}" />
            </ContextMenu>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" />
      </Style>
    </Grid.Style>
    <Interaction.Behaviors>
      <b:GridDragAndDropBehavior Command="{Binding ContentDropCommand}" />
    </Interaction.Behaviors>
    <Grid Name="TrackList" Visibility="Collapsed">
      <innerViews:TrackDetailsView />
    </Grid>
    <Grid Name="ArtistGeneralList" Visibility="Collapsed">
      <ListView Style="{StaticResource ListViewNoHeaderStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="#00FFFFFF" AllowDrop="True" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsVirtualizingWhenGrouping="True" ItemsSource="{Binding Source={StaticResource ArtistByNameView}}" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}">
        <ListView.GroupStyle>
          <GroupStyle>
            <GroupStyle.HeaderTemplate>
              <DataTemplate>
                <Grid Style="{StaticResource SubHeaderGridStyle}">
                  <TextBlock Style="{StaticResource SubHeaderTitileStyle}" />
                </Grid>
              </DataTemplate>
            </GroupStyle.HeaderTemplate>
            <GroupStyle.ContainerStyle>
              <Style TargetType="{x:Type GroupItem}">
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                      <StackPanel>
                        <ContentPresenter />
                        <ItemsPresenter Margin="0,0,0,0" />
                      </StackPanel>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </GroupStyle.ContainerStyle>
          </GroupStyle>
        </ListView.GroupStyle>
        <ListView.ItemContainerStyle>
          <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ArtistGeneralListItemStyle}">
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                  <Border Name="_layoutRoot" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#00FFFFFF" AllowDrop="True">
                    <Interaction.Behaviors>
                      <b:ItemsControlDragItemBehavior Command="{Binding DataContext.DragItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" IsSelectionMode="{Binding Tag.IsSelectionMode, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" SelectedItems="{Binding Tag.SelectedItems, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                      <b:ListBoxItemSelectionByClickBehavior IsEnabled="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}" />
                    </Interaction.Behaviors>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                      <ContentPresenter />
                      <CheckBox Name="_checkBox" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Hidden" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ListBoxItem.IsSelected" Value="True">
                      <Setter TargetName="_layoutRoot" Property="Border.Background" Value="#FF1F252D" />
                      <Setter Property="Control.Foreground" Value="#FF4FB2F6" />
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="_layoutRoot" Property="Border.BorderBrush" Value="#FF4FB2F6" />
                      <Setter TargetName="_layoutRoot" Property="Border.Background" Value="#FF4FB2F6" />
                      <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                        <Condition Binding="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}" Value="false" />
                        <Condition Binding="{Binding (b:ListBoxExtendedSelectionBehavior.IsEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}" Value="True" />
                      </MultiDataTrigger.Conditions>
                    </MultiDataTrigger>
                    <DataTrigger Value="True" Binding="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}">
                      <Setter TargetName="_checkBox" Property="UIElement.Visibility" Value="Visible" />
                    </DataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.ContextMenu">
              <Setter.Value>
                <ContextMenu Foreground="#FF000000" DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                  <MenuItem Header="{Binding COM_SID_OPEN, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.ItemDoubleClickCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_ADD_TO_QUEUE, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.SendToQueueCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_REMOVE_FOLDER, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.RemoveArtistCommand}" CommandParameter="{Binding DataContext}" />
                </ContextMenu>
              </Setter.Value>
            </Setter>
          </Style>
        </ListView.ItemContainerStyle>
        <ListView.ItemTemplate>
          <DataTemplate>
            <Grid Background="#00FFFFFF" Margin="0,3,0,3">
              <Interaction.Behaviors>
                <b:DoubleClickBehavior Command="{Binding DataContext.ItemDoubleClickCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" CommandParameter="{Binding}" />
              </Interaction.Behaviors>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Name="_border" BorderBrush="#00FFFFFF">
                  <Image Margin="35,0,0,0" Width="103" Height="103" Source="{Binding Album.Preview, Converter={StaticResource ArtistConverter}}" />
                </Border>
                <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="40,0,0,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" TextBlock.FontFamily="Arial" TextBlock.FontSize="15pt" TextBlock.FontWeight="Bold" Text="{Binding Artist.Name}" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                <TextBlock Grid.Column="1" Margin="60,0,54,0" VerticalAlignment="Center" HorizontalAlignment="Right" TextTrimming="CharacterEllipsis" TextBlock.FontFamily="Arial" TextBlock.FontSize="12pt" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem}}">
                  <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1} - {2} - {3}">
                      <Binding Path="Artist.AlbumsCount" />
                      <Binding Path="COM_SID_ALBUMS" Source="{StaticResource LocalizationSource}" />
                      <Binding Path="Artist.SongsCount" />
                      <Binding Path="COM_SID_SONGS" Source="{StaticResource LocalizationSource}" />
                    </MultiBinding>
                  </TextBlock.Text>
                </TextBlock>
              </Grid>
            </Grid>
            <DataTemplate.Triggers>
              <DataTrigger Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}">
                <Setter TargetName="_border" Property="Border.BorderBrush" Value="#FF4FB2F6" />
              </DataTrigger>
            </DataTemplate.Triggers>
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>
    </Grid>
    <Grid Name="ArtistDetailedList" Visibility="Collapsed">
      <Grid.RowDefinitions>
        <RowDefinition Height="40" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <innerViews:NavigationTitle Grid.Row="0" BackCommand="{Binding MusicBackCommand}" TitleText="{Binding CurrentArtist.Name}" />
      <ListView Grid.Row="1" Style="{StaticResource TrackListViewStyle}" Background="#00FFFFFF" BorderThickness="0" AllowDrop="True" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VirtualizingPanel.IsVirtualizingWhenGrouping="True" VirtualizingPanel.IsVirtualizing="True" ItemsSource="{Binding Source={StaticResource TrackByAlbumView}}" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}">
        <Interaction.Behaviors>
          <b:ListBoxExtendedSelectionBehavior ExtendedSelectionEnabled="{Binding DataContext.IsSelectionMode, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}" SelectedItems="{Binding DataContext.SelectedItems, Mode=OneWayToSource, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}" />
        </Interaction.Behaviors>
        <ListView.View>
          <GridView ColumnHeaderContainerStyle="{StaticResource GeneralMusicColumnHeaderStyle}" />
        </ListView.View>
        <ListView.GroupStyle>
          <GroupStyle>
            <GroupStyle.HeaderTemplate>
              <DataTemplate>
                <Border BorderBrush="{StaticResource BorderBrush}">
                  <Grid Background="{StaticResource AlbumBgrBrush}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Margin="33,8,0,10" VerticalAlignment="Center" Height="103" Width="103" Source="{Binding Name.Preview, Converter={StaticResource AlbumConverter}}" />
                    <Grid Grid.Column="1" Margin="20,8,0,10">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="24" />
                      </Grid.RowDefinitions>
                      <TextBlock Grid.Row="0" Margin="0,0,0,2" VerticalAlignment="Center" TextBlock.FontWeight="Bold" TextBlock.FontFamily="Atial" TextBlock.FontSize="18pt" TextBlock.Foreground="{StaticResource TextBlock.Static.ForegroundBrush}" TextTrimming="CharacterEllipsis" Text="{Binding Name.Name}" />
                      <TextBlock Grid.Row="1" Margin="0,0,0,1" VerticalAlignment="Center" TextBlock.FontFamily="Atial" TextBlock.FontSize="15pt" TextBlock.Foreground="{StaticResource TextBlock.Static.ForegroundBrush}" TextTrimming="CharacterEllipsis" Text="{Binding DataContext.CurrentArtist.Name, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                      <TextBlock Grid.Row="2" VerticalAlignment="Center" TextBlock.Foreground="{StaticResource TextBlock.Static.ForegroundBrush}" TextTrimming="CharacterEllipsis" TextBlock.FontFamily="Atial" TextBlock.FontSize="12pt">
                        <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0} - {1}">
                            <Binding Path="ItemCount" />
                            <Binding Path="COM_SID_SONGS" Source="{StaticResource LocalizationSource}" />
                          </MultiBinding>
                        </TextBlock.Text>
                      </TextBlock>
                    </Grid>
                  </Grid>
                </Border>
              </DataTemplate>
            </GroupStyle.HeaderTemplate>
            <GroupStyle.ContainerStyle>
              <Style TargetType="{x:Type GroupItem}">
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                      <StackPanel>
                        <ContentPresenter />
                        <ItemsPresenter Margin="0,0,0,0" />
                      </StackPanel>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </GroupStyle.ContainerStyle>
          </GroupStyle>
        </ListView.GroupStyle>
        <ListView.ItemTemplate>
          <DataTemplate>
            <Border BorderBrush="{StaticResource BorderBrush}" Background="#00FFFFFF" AllowDrop="True">
              <TextBlock VerticalAlignment="Center" Margin="47,15,0,15" TextBlock.FontFamily="Arial" TextBlock.FontSize="15pt" TextTrimming="CharacterEllipsis" Text="{Binding Name}" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
              <Interaction.Behaviors>
                <b:ItemsControlDragItemBehavior Command="{Binding DataContext.DragItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" IsSelectionMode="{Binding Tag.IsSelectionMode, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" SelectedItems="{Binding Tag.SelectedItems, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                <b:DoubleClickBehavior Command="{Binding DataContext.ItemDoubleClickCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" CommandParameter="{Binding}" />
                <b:ListBoxItemSelectionByClickBehavior IsEnabled="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}" />
              </Interaction.Behaviors>
            </Border>
          </DataTemplate>
        </ListView.ItemTemplate>
        <ListView.ItemContainerStyle>
          <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Control.Foreground" Value="{StaticResource TextBlock.Static.ForegroundBrush}" />
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                  <Border Name="_layoutRoot" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#00FFFFFF">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                      <ContentPresenter />
                      <CheckBox Name="_checkBox" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="2" Visibility="Hidden" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ListBoxItem.IsSelected" Value="True">
                      <Setter Property="Control.Foreground" Value="#FF4FB2F6" />
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="_layoutRoot" Property="Border.Background" Value="#FF4FB2F6" />
                      <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
                    </Trigger>
                    <DataTrigger Value="True" Binding="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}">
                      <Setter TargetName="_checkBox" Property="UIElement.Visibility" Value="Visible" />
                    </DataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.ContextMenu">
              <Setter.Value>
                <ContextMenu Foreground="#FF000000" DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                  <MenuItem Header="{Binding COM_SID_PLAY, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.PlayLocalCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_ADD_TO_QUEUE, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.SendToQueueCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_PLAY_ON_TV, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.PlayOnTvCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_REMOVE_FILES, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.RemoveFilesCommand}" CommandParameter="{Binding DataContext}" />
                </ContextMenu>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
          </Style>
        </ListView.ItemContainerStyle>
      </ListView>
    </Grid>
    <Grid Name="AlbumGeneralList" Visibility="Collapsed">
      <ListView Style="{StaticResource ListViewNoHeaderStyle}" BorderThickness="0,0,0,0" Background="#00FFFFFF" AllowDrop="True" ItemsSource="{Binding AlbumsList}" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}">
        <ListView.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Vertical" Margin="5">
              <Interaction.Behaviors>
                <b:DoubleClickBehavior Command="{Binding DataContext.ItemDoubleClickCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" CommandParameter="{Binding}" />
              </Interaction.Behaviors>
              <Image Height="170" Width="170" Margin="0,0,0,14" Source="{Binding Album.Preview, Converter={StaticResource AlbumConverter}}" />
              <TextBlock Width="170" TextBlock.FontFamily="Arial" TextBlock.FontSize="15" TextBlock.FontWeight="Bold" TextTrimming="CharacterEllipsis" Text="{Binding Album.Name}" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
              <TextBlock Width="170" TextBlock.FontFamily="Arial" TextBlock.FontSize="12" TextTrimming="CharacterEllipsis" Text="{Binding Artist.Name}" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
              <TextBlock Width="170" TextBlock.FontFamily="Arial" TextBlock.FontSize="10" TextTrimming="CharacterEllipsis" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem}}">
                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} - {1}">
                    <Binding Path="Album.SongsCount" />
                    <Binding Path="COM_SID_SONGS" Source="{StaticResource LocalizationSource}" />
                  </MultiBinding>
                </TextBlock.Text>
              </TextBlock>
            </StackPanel>
          </DataTemplate>
        </ListView.ItemTemplate>
        <ListView.ItemsPanel>
          <ItemsPanelTemplate>
            <VirtualizingTilePanel ItemWidth="180" ItemHeight="264" />
          </ItemsPanelTemplate>
        </ListView.ItemsPanel>
        <ListView.ItemContainerStyle>
          <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                  <Border Name="_templateRoot" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="2" AllowDrop="True">
                    <Interaction.Behaviors>
                      <b:ItemsControlDragItemBehavior Command="{Binding DataContext.DragItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" IsSelectionMode="{Binding Tag.IsSelectionMode, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" SelectedItems="{Binding Tag.SelectedItems, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                    </Interaction.Behaviors>
                    <ContentPresenter />
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ListBoxItem.IsSelected" Value="True">
                      <Setter TargetName="_templateRoot" Property="Border.BorderBrush" Value="#FF4FB2F6" />
                      <Setter Property="Control.Foreground" Value="#FF4FB2F6" />
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="_templateRoot" Property="Border.BorderBrush" Value="#FF4FB2F6" />
                      <Setter TargetName="_templateRoot" Property="Border.Background" Value="#FF4FB2F6" />
                      <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.ContextMenu">
              <Setter.Value>
                <ContextMenu Foreground="#FF000000" DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                  <MenuItem Header="{Binding COM_SID_OPEN, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.ItemDoubleClickCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_ADD_TO_QUEUE, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.SendToQueueCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_REMOVE_FOLDER, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.RemoveAlbumCommand}" CommandParameter="{Binding DataContext}" />
                </ContextMenu>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
          </Style>
        </ListView.ItemContainerStyle>
      </ListView>
    </Grid>
    <Grid Name="AlbumDetailedList" Visibility="Collapsed">
      <Grid.RowDefinitions>
        <RowDefinition Height="40" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <innerViews:NavigationTitle Grid.Row="0" BackCommand="{Binding MusicBackCommand}" TitleText="{Binding CurrentAlbum.Name}" />
      <ListView Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Style="{StaticResource TrackListViewStyle}" BorderThickness="0" Background="#00FFFFFF" AllowDrop="True" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsVirtualizingWhenGrouping="True" ItemsSource="{Binding Source={StaticResource TrackByAlbumView}}" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}">
        <Interaction.Behaviors>
          <b:ListBoxExtendedSelectionBehavior ExtendedSelectionEnabled="{Binding DataContext.IsSelectionMode, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}" SelectedItems="{Binding DataContext.SelectedItems, Mode=OneWayToSource, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}" IsEnabled="{Binding IsBackVisible}" />
        </Interaction.Behaviors>
        <ListView.View>
          <GridView ColumnHeaderContainerStyle="{StaticResource GeneralMusicColumnHeaderStyle}" />
        </ListView.View>
        <ListView.GroupStyle>
          <GroupStyle>
            <GroupStyle.HeaderTemplate>
              <DataTemplate>
                <Border BorderBrush="{StaticResource BorderBrush}">
                  <Grid Background="{StaticResource AlbumBgrBrush}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Margin="33,8,0,10" VerticalAlignment="Center" Height="103" Width="103" Source="{Binding Name.Preview, Converter={StaticResource AlbumConverter}}" />
                    <Grid Grid.Column="1" Margin="20,8,0,10">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="24" />
                      </Grid.RowDefinitions>
                      <TextBlock Grid.Row="0" Margin="0,0,0,2" VerticalAlignment="Center" TextBlock.FontWeight="Bold" TextBlock.FontFamily="Atial" TextBlock.FontSize="18pt" TextBlock.Foreground="{StaticResource TextBlock.Static.ForegroundBrush}" TextTrimming="CharacterEllipsis" Text="{Binding Name.Name}" />
                      <TextBlock Grid.Row="1" Margin="0,0,0,1" VerticalAlignment="Center" TextBlock.FontFamily="Atial" TextBlock.FontSize="15pt" TextBlock.Foreground="{StaticResource TextBlock.Static.ForegroundBrush}" TextTrimming="CharacterEllipsis" Text="{Binding DataContext.CurrentArtist.Name, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                      <TextBlock Grid.Row="2" VerticalAlignment="Center" TextBlock.Foreground="{StaticResource TextBlock.Static.ForegroundBrush}" TextTrimming="CharacterEllipsis" TextBlock.FontFamily="Atial" TextBlock.FontSize="12pt">
                        <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0} - {1}">
                            <Binding Path="ItemCount" />
                            <Binding Path="COM_SID_SONGS" Source="{StaticResource LocalizationSource}" />
                          </MultiBinding>
                        </TextBlock.Text>
                      </TextBlock>
                    </Grid>
                  </Grid>
                </Border>
              </DataTemplate>
            </GroupStyle.HeaderTemplate>
            <GroupStyle.ContainerStyle>
              <Style TargetType="{x:Type GroupItem}">
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                      <StackPanel>
                        <ContentPresenter />
                        <ItemsPresenter Margin="0,0,0,0" />
                      </StackPanel>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </GroupStyle.ContainerStyle>
          </GroupStyle>
        </ListView.GroupStyle>
        <ListView.ItemTemplate>
          <DataTemplate>
            <Border BorderBrush="{StaticResource BorderBrush}" Background="#00FFFFFF" AllowDrop="True">
              <TextBlock VerticalAlignment="Center" Margin="47,15,0,15" TextBlock.FontFamily="Arial" TextBlock.FontSize="15pt" TextTrimming="CharacterEllipsis" Text="{Binding Name}" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
              <Interaction.Behaviors>
                <b:ItemsControlDragItemBehavior Command="{Binding DataContext.DragItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" IsSelectionMode="{Binding Tag.IsSelectionMode, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" SelectedItems="{Binding Tag.SelectedItems, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                <b:DoubleClickBehavior Command="{Binding DataContext.ItemDoubleClickCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" CommandParameter="{Binding}" />
                <b:ListBoxItemSelectionByClickBehavior IsEnabled="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}" />
              </Interaction.Behaviors>
            </Border>
          </DataTemplate>
        </ListView.ItemTemplate>
        <ListView.ItemContainerStyle>
          <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                  <Border Name="_layoutRoot" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#00FFFFFF">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                      <ContentPresenter />
                      <CheckBox Name="_checkBox" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="2" Visibility="Hidden" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ListBoxItem.IsSelected" Value="True">
                      <Setter Property="Control.Foreground" Value="#FF4FB2F6" />
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="_layoutRoot" Property="Border.Background" Value="#FF4FB2F6" />
                      <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
                    </Trigger>
                    <DataTrigger Value="True" Binding="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}">
                      <Setter TargetName="_checkBox" Property="UIElement.Visibility" Value="Visible" />
                    </DataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.ContextMenu">
              <Setter.Value>
                <ContextMenu Foreground="#FF000000" DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                  <MenuItem Header="{Binding COM_SID_PLAY, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.PlayLocalCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_ADD_TO_QUEUE, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.SendToQueueCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_PLAY_ON_TV, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.PlayOnTvCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_REMOVE_FILES, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.RemoveFilesCommand}" CommandParameter="{Binding DataContext}" />
                </ContextMenu>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
          </Style>
        </ListView.ItemContainerStyle>
      </ListView>
    </Grid>
    <Grid Name="GenreGeneralList" Visibility="Collapsed">
      <ListView BorderThickness="0,0,0,0" Style="{StaticResource ListViewNoHeaderStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" Background="#00FFFFFF" AllowDrop="True" SelectionMode="Single" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsVirtualizingWhenGrouping="True" ItemsSource="{Binding Source={StaticResource GenreByNameView}}">
        <ListView.GroupStyle>
          <GroupStyle>
            <GroupStyle.HeaderTemplate>
              <DataTemplate>
                <Grid Style="{StaticResource SubHeaderGridStyle}">
                  <TextBlock Style="{StaticResource SubHeaderTitileStyle}" />
                </Grid>
              </DataTemplate>
            </GroupStyle.HeaderTemplate>
            <GroupStyle.ContainerStyle>
              <Style TargetType="{x:Type GroupItem}">
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                      <StackPanel>
                        <ContentPresenter />
                        <ItemsPresenter Margin="0,0,0,0" />
                      </StackPanel>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </GroupStyle.ContainerStyle>
          </GroupStyle>
        </ListView.GroupStyle>
        <ListView.ItemContainerStyle>
          <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ArtistGeneralListItemStyle}">
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                  <Border Name="_layoutRoot" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#00FFFFFF" AllowDrop="True">
                    <Interaction.Behaviors>
                      <b:ItemsControlDragItemBehavior Command="{Binding DataContext.DragItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" IsSelectionMode="{Binding Tag.IsSelectionMode, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" SelectedItems="{Binding Tag.SelectedItems, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                      <b:ListBoxItemSelectionByClickBehavior IsEnabled="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}" />
                    </Interaction.Behaviors>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                      <ContentPresenter />
                      <CheckBox Name="_checkBox" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Hidden" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ListBoxItem.IsSelected" Value="True">
                      <Setter TargetName="_layoutRoot" Property="Border.Background" Value="#FF1F252D" />
                      <Setter Property="Control.Foreground" Value="#FF4FB2F6" />
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="_layoutRoot" Property="Border.BorderBrush" Value="#FF4FB2F6" />
                      <Setter TargetName="_layoutRoot" Property="Border.Background" Value="#FF4FB2F6" />
                      <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                        <Condition Binding="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}" Value="false" />
                        <Condition Binding="{Binding (b:ListBoxExtendedSelectionBehavior.IsEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}" Value="True" />
                      </MultiDataTrigger.Conditions>
                    </MultiDataTrigger>
                    <DataTrigger Value="True" Binding="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}">
                      <Setter TargetName="_checkBox" Property="UIElement.Visibility" Value="Visible" />
                    </DataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.ContextMenu">
              <Setter.Value>
                <ContextMenu Foreground="#FF000000" DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                  <MenuItem Header="{Binding COM_SID_OPEN, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.ItemDoubleClickCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_ADD_TO_QUEUE, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.SendToQueueCommand}" CommandParameter="{Binding DataContext}" />
                  <MenuItem Header="{Binding MAPP_SID_REMOVE_FOLDER, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.RemoveGenreCommand}" CommandParameter="{Binding DataContext}" />
                </ContextMenu>
              </Setter.Value>
            </Setter>
          </Style>
        </ListView.ItemContainerStyle>
        <ListView.ItemTemplate>
          <DataTemplate>
            <Grid Background="#00FFFFFF" Margin="0,3,0,3">
              <Interaction.Behaviors>
                <b:DoubleClickBehavior Command="{Binding DataContext.ItemDoubleClickCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" CommandParameter="{Binding}" />
              </Interaction.Behaviors>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Name="_border">
                  <Image Margin="35,0,0,0" Width="103" Height="103" Source="{Binding Genre.Preview, Converter={StaticResource GenreConverter}}" />
                </Border>
                <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="40,0,0,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" TextBlock.FontFamily="Arial" TextBlock.FontSize="15pt" TextBlock.FontWeight="Bold" Text="{Binding Genre.Name}" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                <TextBlock Grid.Column="1" Margin="60,0,54,0" VerticalAlignment="Center" HorizontalAlignment="Right" TextTrimming="CharacterEllipsis" TextBlock.FontFamily="Arial" TextBlock.FontSize="12pt" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem}}">
                  <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                      <Binding Path="Genre.SongsCount" />
                      <Binding Path="COM_SID_SONGS" Source="{StaticResource LocalizationSource}" />
                    </MultiBinding>
                  </TextBlock.Text>
                </TextBlock>
              </Grid>
            </Grid>
            <DataTemplate.Triggers>
              <DataTrigger Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}">
                <Setter TargetName="_border" Property="Border.BorderBrush" Value="#FF4FB2F6" />
              </DataTrigger>
            </DataTemplate.Triggers>
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>
    </Grid>
    <Grid Name="GenreDetailedList" Visibility="Collapsed">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <innerViews:NavigationTitle Grid.Row="0" BackCommand="{Binding MusicBackCommand}" TitleText="{Binding CurrentGenre}" />
      <innerViews:TrackDetailsView Grid.Row="1" />
    </Grid>
    <Grid Name="FolderList" Visibility="Collapsed">
      <Grid Visibility="{Binding IsInRootFolder, Converter={StaticResource _visibilityConverter}}">
        <innerViews:FolderListView />
      </Grid>
      <Grid Visibility="{Binding IsInsideFolder, Converter={StaticResource _visibilityConverter}}">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <innerViews:NavigationTitle Grid.Row="0" BackCommand="{Binding MusicBackCommand}" TitleText="{Binding CurrentFolder.Name}" />
        <innerViews:TrackDetailsView Grid.Row="1" />
      </Grid>
    </Grid>
    <Grid Name="NoContentList" Visibility="Collapsed">
      <TextBlock Style="{StaticResource MultimediaGuidTextBlockStyle}" TextTrimming="CharacterEllipsis" Text="{Binding MAPP_SID_CLICK_PLUS_BUTTON_ADD_CONTENT, Source={StaticResource LocalizationSource}}" />
    </Grid>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup Name="Music">
        <VisualState Name="Track">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TrackList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FolderList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NoContentList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
        <VisualState Name="ArtistGeneral">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TrackList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FolderList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NoContentList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
        <VisualState Name="ArtistDetailed">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TrackList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FolderList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NoContentList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
        <VisualState Name="AlbumGeneral">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TrackList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FolderList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NoContentList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
        <VisualState Name="AlbumDetailed">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TrackList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FolderList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NoContentList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
        <VisualState Name="GenreGeneral">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TrackList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FolderList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NoContentList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
        <VisualState Name="GenreDetailed">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TrackList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FolderList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NoContentList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
        <VisualState Name="Folder">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TrackList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FolderList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NoContentList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
        <VisualState Name="NoContent">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TrackList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArtistDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AlbumDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreGeneralList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="GenreDetailedList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FolderList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NoContentList"  Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</UserControl>