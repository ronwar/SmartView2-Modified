
<UserControl x:Class="SmartView2.Views.MultimediaInner.TileFileListView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:common="clr-namespace:SmartView2.Common" xmlns:b="clr-namespace:SmartView2.Behaviors" xmlns:views="clr-namespace:SmartView2.Views">
  <Grid>
    <ListView Style="{StaticResource ListViewNoHeaderStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="#00FFFFFF" AllowDrop="True" SelectionMode="Extended" ItemsSource="{Binding ItemsList}" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}">
      <Interaction.Behaviors>
        <b:ListBoxExtendedSelectionBehavior ExtendedSelectionEnabled="{Binding DataContext.IsSelectionMode, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}" SelectedItems="{Binding DataContext.SelectedItems, Mode=OneWayToSource, RelativeSource={RelativeSource AncestorType={x:Type views:MultimediaPage}}}" />
      </Interaction.Behaviors>
      <ListView.ItemTemplate>
        <DataTemplate>
          <Grid Background="#00FFFFFF" Width="200" Height="190" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
            <Grid.ContextMenu>
              <ContextMenu Foreground="#FF000000" DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="{Binding COM_SID_OPEN, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.ItemDoubleClickCommand}" CommandParameter="{Binding DataContext}">
                  <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.ContentType}" Value="Video">
                          <Setter Property="UIElement.Visibility" Value="Collapsed" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="{Binding COM_SID_PLAY, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.ItemDoubleClickCommand}" CommandParameter="{Binding DataContext}">
                  <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.ContentType}" Value="Image">
                          <Setter Property="UIElement.Visibility" Value="Collapsed" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="{Binding MAPP_SID_ADD_TO_QUEUE, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.SendToQueueCommand}" CommandParameter="{Binding DataContext}" />
                <MenuItem Header="{Binding MAPP_SID_PLAY_ON_TV, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.PlayOnTvCommand}" CommandParameter="{Binding DataContext}" />
                <MenuItem Header="{Binding MAPP_SID_REMOVE_FILES, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.RemoveFilesCommand}" CommandParameter="{Binding DataContext}" />
              </ContextMenu>
            </Grid.ContextMenu>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition Height="50" />
            </Grid.RowDefinitions>
            <Image Grid.Row="0" Grid.RowSpan="2" Stretch="Uniform" Source="{Binding Preview}" />
            <Border Grid.Row="1" Background="#46000000">
              <Border.Style>
                <Style TargetType="{x:Type Border}">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding ContentType}" Value="Image">
                      <Setter Property="UIElement.Visibility" Value="Hidden" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Border.Style>
              <TextBlock TextTrimming="CharacterEllipsis" Margin="18,0" TextBlock.FontSize="24" TextBlock.FontFamily="Calibri" TextBlock.FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" TextBlock.Foreground="{StaticResource TextBlock.Static.ForegroundBrush}" Text="{Binding Name}" />
            </Border>
          </Grid>
        </DataTemplate>
      </ListView.ItemTemplate>
      <ListView.ItemContainerStyle>
        <Style TargetType="{x:Type ListViewItem}">
          <Setter Property="FrameworkElement.Margin" Value="17,17,13,17" />
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListViewItem}">
                <Border Name="_layoutRoot" BorderThickness="2" BorderBrush="#00FFFFFF" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#00FFFFFF" AllowDrop="True">
                  <Interaction.Behaviors>
                    <b:ListBoxItemSelectionByClickBehavior IsEnabled="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}" />
                  </Interaction.Behaviors>
                  <Grid>
                    <Interaction.Behaviors>
                      <b:ItemsControlDragItemBehavior Command="{Binding DataContext.DragItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" IsSelectionMode="{Binding Tag.IsSelectionMode, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" SelectedItems="{Binding Tag.SelectedItems, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                      <b:DoubleClickBehavior Command="{Binding DataContext.ItemDoubleClickCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" CommandParameter="{Binding}" />
                    </Interaction.Behaviors>
                    <ContentPresenter />
                    <StackPanel Name="_buttonsPanel" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Hidden" Margin="0">
                      <Button Margin="0" Style="{StaticResource MultimediaSendToTvButtonStyle}" Command="{Binding DataContext.PlayOnTvCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}" />
                      <Button Style="{StaticResource MultimediaSendToQueueButtonStyle}" Command="{Binding DataContext.SendToQueueCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}" />
                    </StackPanel>
                    <CheckBox Name="_checkBox" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5" Visibility="Hidden" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                  </Grid>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter TargetName="_layoutRoot" Property="Border.BorderBrush" Value="#FF4FB2F6" />
                  </Trigger>
                  <Trigger Property="ListBoxItem.IsSelected" Value="True">
                    <Setter TargetName="_layoutRoot" Property="Border.BorderBrush" Value="#FF4FB2F6" />
                    <Setter TargetName="_buttonsPanel" Property="UIElement.Visibility" Value="Visible" />
                  </Trigger>
                  <DataTrigger Value="True" Binding="{Binding (b:ListBoxExtendedSelectionBehavior.ExtendedSelectionEnabledAttached), RelativeSource={RelativeSource AncestorType=ListView}}">
                    <Setter TargetName="_checkBox" Property="UIElement.Visibility" Value="Visible" />
                    <Setter TargetName="_buttonsPanel" Property="UIElement.Visibility" Value="Hidden" />
                  </DataTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </ListView.ItemContainerStyle>
      <ListView.ItemsPanel>
        <ItemsPanelTemplate>
          <VirtualizingTilePanel ItemWidth="230" ItemHeight="224" Margin="19,19,15,19" />
        </ItemsPanelTemplate>
      </ListView.ItemsPanel>
    </ListView>
  </Grid>
</UserControl>