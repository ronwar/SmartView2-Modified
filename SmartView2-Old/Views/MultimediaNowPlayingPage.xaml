<UserControl x:Class="SmartView2.Views.MultimediaNowPlayingPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:common="clr-namespace:SmartView2.Common"
             xmlns:controls="clr-namespace:SmartView2.Controls"
             xmlns:b="clr-namespace:SmartView2.Behaviors"
             xmlns:sys="clr-namespace:System;assembly=mscorlib">
  <FrameworkElement.Resources>
    <common:SecondsTimeToStringConverter x:Key="_timeConverter"/>
    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border Background="Transparent"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="FrameworkElement.Height" Value="14"/>
      <Setter Property="FrameworkElement.Width" Value="14"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Ellipse x:Name="Ellipse" StrokeThickness="1">
              <Shape.Stroke>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientBrush.GradientStops>
                    <GradientStopCollection>
                      <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0"/>
                      <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0"/>
                    </GradientStopCollection>
                  </GradientBrush.GradientStops>
                </LinearGradientBrush>
              </Shape.Stroke>
              <Shape.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1"/>
                  <GradientStop Color="{DynamicResource ControlLightColor}"/>
                </LinearGradientBrush>
              </Shape.Fill>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).                     (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                    Storyboard.TargetName="Ellipse">
                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}"/>
                      </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).                     (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                    Storyboard.TargetName="Ellipse">
                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}"/>
                      </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).                     (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                    Storyboard.TargetName="Ellipse">
                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}"/>
                      </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
            </Ellipse>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TickBar x:Name="TopTick" SnapsToDevicePixels="true" Placement="Top" Height="4" Visibility="Collapsed">
          <TickBar.Fill>
            <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
          </TickBar.Fill>
        </TickBar>
        <Border x:Name="TrackBackground" Margin="0" CornerRadius="2" Height="4" Grid.Row="1" BorderThickness="1">
          <Border.BorderBrush>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <GradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0"/>
                  <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0"/>
                </GradientStopCollection>
              </GradientBrush.GradientStops>
            </LinearGradientBrush>
          </Border.BorderBrush>
          <Border.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <GradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0"/>
                  <GradientStop Color="{DynamicResource SliderTrackDarkColor}" Offset="1.0"/>
                </GradientStopCollection>
              </GradientBrush.GradientStops>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Track x:Name="PART_Track" Grid.Row="1">
          <Track.DecreaseRepeatButton>
            <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge"/>
          </Track.DecreaseRepeatButton>
          <Track.Thumb>
            <Thumb Style="{StaticResource SliderThumbStyle}"/>
          </Track.Thumb>
          <Track.IncreaseRepeatButton>
            <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge"/>
          </Track.IncreaseRepeatButton>
        </Track>
        <TickBar x:Name="BottomTick" SnapsToDevicePixels="true" Grid.Row="2"
                 Fill="{TemplateBinding Control.Foreground}" Placement="Bottom" Height="4" Visibility="Collapsed"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="Slider.TickPlacement" Value="TopLeft">
          <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
        </Trigger>
        <Trigger Property="Slider.TickPlacement" Value="BottomRight">
          <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
        </Trigger>
        <Trigger Property="Slider.TickPlacement" Value="Both">
          <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
          <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
  </FrameworkElement.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="60"/>
    </Grid.RowDefinitions>
    <Border Grid.Row="0" Background="Transparent" Margin="7,0">
      <FrameworkElement.ContextMenu>
        <ContextMenu IsOpen="{Binding IsContentNotEmpty, Mode=OneWay}">
          <MenuItem Header="{Binding COM_SID_PLAY, Source={StaticResource LocalizationSource}}"
                    Command="{Binding PlayOrPause}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type MenuItem}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Stop">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Pause">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Play">
                    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </MenuItem>
          <MenuItem Header="{Binding COM_SID_PAUSE, Source={StaticResource LocalizationSource}}"
                    Command="{Binding PlayOrPause}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type MenuItem}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Stop">
                    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Pause">
                    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Play">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </MenuItem>
          <MenuItem Header="{Binding COM_SID_MOVE_TO_NEXT, Source={StaticResource LocalizationSource}}"
                    Command="{Binding PlayNextFile}" IsEnabled="{Binding IsQueueReady}"/>
          <MenuItem Header="{Binding COM_SID_MOVE_TO_PREVIOUS, Source={StaticResource LocalizationSource}}"
                    Command="{Binding PlayPreviousFile}"/>
        </ContextMenu>
      </FrameworkElement.ContextMenu>
      <Grid x:Name="_contentGrid" Background="Transparent">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type Grid}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Track">
                <Setter Property="FrameworkElement.MaxWidth" Value="751"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </FrameworkElement.Style>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock x:Name="_artistName" Grid.Row="0" Text="{Binding MultiScreen.CurrentMediaContent.Artist.Name}">
          <FrameworkElement.Style>
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource WhiteTextBlockStyle}">
              <Setter Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter Property="TextBlock.FontFamily" Value="Arial"/>
              <Setter Property="TextBlock.FontSize" Value="18pt"/>
              <Setter Property="TextBlock.FontWeight" Value="Bold"/>
              <Setter Property="TextBlock.TextAlignment" Value="Center"/>
              <Setter Property="FrameworkElement.Margin" Value="0,14"/>
              <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
              <Setter Property="FrameworkElement.MaxWidth" Value="751"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Track">
                  <Setter Property="UIElement.Visibility" Value="Visible"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Style>
        </TextBlock>
        <Image Grid.Row="1" Stretch="Fill" Source="{Binding MultiScreen.CurrentMediaContent.Thumbnail}"/>
        <Grid Row="2" Margin="0,11,0,20" Height="50">
          <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="669"/>
            <ColumnDefinition MaxWidth="72"/>
          </Grid.ColumnDefinitions>
          <FrameworkElement.Style>
            <Style TargetType="{x:Type Grid}">
              <Setter Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
              <Setter Property="FrameworkElement.VerticalAlignment" Value="Bottom"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Track">
                  <Setter Property="UIElement.Visibility" Value="Visible"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Style>
          <TextBlock Grid.Column="0" Text="{Binding MultiScreen.CurrentMediaContent.Name}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource WhiteTextBlockStyle}">
                <Setter Property="TextBlock.FontFamily" Value="Arial"/>
                <Setter Property="TextBlock.FontSize" Value="15pt"/>
                <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
                <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
                <Setter Property="FrameworkElement.Margin" Value="0,0,10,0"/>
              </Style>
            </FrameworkElement.Style>
          </TextBlock>
          <TextBlock Grid.Column="1" Text="{Binding MultiScreen.CurrentMediaContent.Album.Name}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource WhiteTextBlockStyle}">
                <Setter Property="TextBlock.FontFamily" Value="Arial"/>
                <Setter Property="TextBlock.FontSize" Value="15pt"/>
                <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                <Setter Property="TextBlock.TextAlignment" Value="Right"/>
                <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
                <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Video">
                    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Track">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </TextBlock>
        </Grid>
      </Grid>
    </Border>
    <Grid Row="1" Background="#FF111621">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <FrameworkElement.Style>
          <Style TargetType="{x:Type Grid}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Track">
                <Setter Property="FrameworkElement.MaxWidth" Value="751"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </FrameworkElement.Style>
        <Slider x:Name="_slider" Grid.Row="0" Minimum="0"
                Maximum="{Binding MultiScreen.CurrentMediaTimeInfo.Duration}">
          <FrameworkElement.Style>
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource SliderStyle}">
              <Setter Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter Property="FrameworkElement.Height" Value="10"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Track">
                  <Setter Property="UIElement.Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Video">
                  <Setter Property="UIElement.Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Image">
                  <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Style>
          <Interaction.Behaviors>
            <b:SliderDragBehavior Command="{Binding ChangePosition}"
                                  Value="{Binding MultiScreen.CurrentMediaTimeInfo.CurrentTime, Mode=OneWay}"/>
          </Interaction.Behaviors>
        </Slider>
        <Grid Row="1" Margin="7,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <TextBlock Grid.Column="0"
                     Text="{Binding Value, ElementName=_slider, Converter={StaticResource _timeConverter}}">
            <FrameworkElement.Style>
              <Style BasedOn="{StaticResource WhiteTextBlockStyle}" TargetType="{x:Type TextBlock}">
                <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
                <Setter Property="TextBlock.FontFamily" Value="Arial"/>
                <Setter Property="TextBlock.FontSize" Value="12pt"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Track">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Video">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Image">
                    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </TextBlock>
          <Grid Column="1" HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Height="42" Width="58" Margin="0,0,9,0"
                    Style="{StaticResource PreviousButtonStyle}" Command="{Binding PlayPreviousFile}"/>
            <Button Grid.Column="1" Height="42" Width="58" Margin="9,0,9,0" Command="{Binding Play}">
              <FrameworkElement.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource PlayButtonStyle}">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Stop">
                      <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Pause">
                      <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Play">
                      <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Style>
            </Button>
            <Button Grid.Column="1" Height="42" Width="58" Margin="9,0,9,0" Command="{Binding Pause}">
              <FrameworkElement.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource PauseButtonStyle}">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Stop">
                      <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Pause">
                      <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MultiScreen.MediaState}" Value="Play">
                      <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Style>
            </Button>
            <Button Grid.Column="2" Height="42" Width="58" Margin="9,0,0,0" Style="{StaticResource NextButtonStyle}"
                    Command="{Binding PlayNextFile}" IsEnabled="{Binding IsQueueReady}"/>
          </Grid>
          <TextBlock Grid.Column="2"
                     Text="{Binding MultiScreen.CurrentMediaTimeInfo.Duration, Converter={StaticResource _timeConverter}}">
            <FrameworkElement.Style>
              <Style BasedOn="{StaticResource WhiteTextBlockStyle}" TargetType="{x:Type TextBlock}">
                <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter Property="TextBlock.TextAlignment" Value="Right"/>
                <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
                <Setter Property="TextBlock.FontFamily" Value="Arial"/>
                <Setter Property="TextBlock.FontSize" Value="12pt"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Track">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Video">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding MultiScreen.CurrentMediaContent.ContentType}" Value="Image">
                    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </TextBlock>
        </Grid>
      </Grid>
    </Grid>
  </Grid>
</UserControl>