<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:b="clr-namespace:SmartView2.Behaviors">
  <SolidColorBrush x:Key="BlueColorBrush" Color="#FF4fb2f6" />
  <BitmapImage x:Key="VolumeOnImage" UriSource="/Resources/Images/volume_on.png" />
  <BitmapImage x:Key="VolumeMuteImage" UriSource="/Resources/Images/volume_mute.png" />
  <Style x:Key="SliderDecreaseRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{StaticResource BlueColorBrush}" StrokeThickness="1" Height="10" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Foreground" Value="#FF000000" />
    <Setter Property="UIElement.Opacity" Value="1" />
    <Setter Property="Control.BorderThickness" Value="0" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="False" />
    <Setter Property="UIElement.ClipToBounds" Value="False" />
  </Style>
  <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="#FF000000" Height="10" Opacity=".75" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="22" />
    <Setter Property="FrameworkElement.Width" Value="11" />
    <Setter Property="Control.Foreground" Value="#FF808080" />
    <Setter Property="UIElement.Visibility" Value="Collapsed" />
  </Style>
  <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <TickBar Name="TopTick" Fill="{TemplateBinding Control.Foreground}" Height="10" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
              <TickBar Name="BottomTick" Fill="{TemplateBinding Control.Foreground}" Height="10" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
              <Border Name="TrackBackground" BorderThickness="1" CornerRadius="1" Height="10" Margin="5,0" Grid.Row="1" VerticalAlignment="center" />
              <Track Name="PART_Track" Grid.Row="1" Grid.RowSpan="2">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderDecreaseRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb Name="Thumb" Focusable="False" Visibility="Collapsed" />
                </Track.Thumb>
              </Track>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
    <Setter Property="TextBlock.TextTrimming" Value="None" />
    <Setter Property="TextBlock.Foreground" Value="{StaticResource TextBlock.Selected.ForegroundBrush}" />
    <Setter Property="TextBlock.FontFamily" Value="Arial" />
    <Setter Property="TextBlock.FontWeight" Value="Normal" />
  </Style>
  <Style x:Key="WhiteTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
    <Setter Property="TextBlock.TextTrimming" Value="None" />
    <Setter Property="TextBlock.Foreground" Value="{StaticResource TextBlock.Static.ForegroundBrush}" />
    <Setter Property="TextBlock.FontFamily" Value="Arial" />
    <Setter Property="TextBlock.FontWeight" Value="Normal" />
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="TextBlock.Foreground" Value="{StaticResource Button.Disabled.ForegroundBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Background" Value="{StaticResource Button.Static.BackgroundBrush}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}" x:Name="controlTemplate">
          <Grid>
            <Viewbox Name="_viewBox" Stretch="Fill">
              <Border Name="border" BorderBrush="#FF171B1F" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="5">
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
              </Border>
            </Viewbox>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Button.Disabled.ForegroundBrush}" Property="Control.Foreground" />
              <Setter Value="{StaticResource Button.Disabled.ForegroundBrush}" Property="TextElement.Foreground" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="True">
              <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.MouseOver.BorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CustomButtonStyle2" TargetType="{x:Type Button}">
    <Setter Property="Control.Background" Value="{StaticResource Button.Static.BackgroundBrush}" />
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Viewbox Name="_viewBox" Stretch="Fill">
              <Border Name="border" BorderBrush="#FF171B1F" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="5">
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
              </Border>
            </Viewbox>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Button.Disabled.ForegroundBrush}" Property="Control.Foreground" />
              <Setter Value="{StaticResource Button.Static.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.MouseOver.BorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <GeometryGroup x:Key="PreviousGeometryGroup">
    <PathGeometry Figures="M 0 10 L 12 00 L 12 10 L 24 0 L 24 20 L 12 10 L 12 20" />
  </GeometryGroup>
  <Style x:Key="PreviousButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Background" Value="{StaticResource Button.Static.BackgroundBrush}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}" x:Name="controlTemplate">
          <Grid>
            <Viewbox Name="_viewBox" Stretch="Fill">
              <Border Name="border" BorderBrush="#FF171B1F" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="5">
                <Path Name="path" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Data="{StaticResource PreviousGeometryGroup}" Fill="#FFFFFFFF" Margin="10" RenderTransformOrigin="0.5,0.5" />
              </Border>
            </Viewbox>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Button.Disabled.ForegroundBrush}" TargetName="path" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="True">
              <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.MouseOver.BorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NextButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Background" Value="{StaticResource Button.Static.BackgroundBrush}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}" x:Name="controlTemplate">
          <Grid>
            <Viewbox Name="_viewBox" Stretch="Fill">
              <Border Name="border" BorderBrush="#FF171B1F" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="5">
                <Path Name="path" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Data="{StaticResource PreviousGeometryGroup}" Fill="#FFFFFFFF" Margin="10" RenderTransformOrigin="0.5,0.5">
                  <Path.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform Angle="180" />
                      <TranslateTransform />
                    </TransformGroup>
                  </Path.RenderTransform>
                </Path>
              </Border>
            </Viewbox>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Button.Disabled.ForegroundBrush}" TargetName="path" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="True">
              <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.MouseOver.BorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="FullScreenButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.Background" Value="{StaticResource Button.Static.BackgroundBrush}" />
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border Name="border" BorderBrush="#FF171B1F" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="5">
              <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Button.Disabled.ForegroundBrush}" Property="Control.Foreground" />
              <Setter Value="{StaticResource Button.Static.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.MouseOver.BorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ContentControl.Content">
      <Setter.Value>
        <Image Source="{StaticResource FullScreenImage}" />
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4" />
  <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#FF191E28" />
  <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF" />
  <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#FF3E4855" />
  <Style x:Key="ScrollBarButton1" TargetType="{x:Type RepeatButton}">
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Name="border" BorderThickness="0" Background="{StaticResource ScrollBar.Static.Background}" SnapsToDevicePixels="True">
            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Control.Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ScrollBar.Static.Thumb1" Color="#FF3D4754" />
  <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb1" Color="White" />
  <Style x:Key="ScrollBarThumbVertical1" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb1}" SnapsToDevicePixels="True" Width="9" RadiusX="4" RadiusY="5" />
          <ControlTemplate.Triggers>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb1}" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarThumbHorizontal1" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb1}" Height="9" RadiusX="4" RadiusY="4" SnapsToDevicePixels="True" />
          <ControlTemplate.Triggers>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb1}" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Background" Value="{StaticResource ScrollBar.Static.Background}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.BorderThickness" Value="0" />
    <Setter Property="FrameworkElement.Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Row="1" />
            <RepeatButton Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton1}">
              <Path Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
            </RepeatButton>
            <Track Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="1">
              <Track.DecreaseRepeatButton>
                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource ScrollBarThumbVertical1}" />
              </Track.Thumb>
            </Track>
            <RepeatButton Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton1}">
              <Path Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="FrameworkElement.Width" Value="Auto" />
        <Setter Property="FrameworkElement.MinWidth" Value="0" />
        <Setter Property="FrameworkElement.Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="Bg" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Column="1" />
                <RepeatButton Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton1}">
                  <Path Name="ArrowLeft" Data="M3.18,7C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                </RepeatButton>
                <Track Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbHorizontal1}" />
                  </Track.Thumb>
                </Track>
                <RepeatButton Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton1}">
                  <Path Name="ArrowRight" Data="M1.81,7C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                </RepeatButton>
              </Grid>
              <ControlTemplate.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill" />
                </MultiDataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ScrollBarWithArrowsStyle" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Background" Value="{StaticResource ScrollBar.Static.Background}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.BorderThickness" Value="0" />
    <Setter Property="FrameworkElement.Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Row="1" />
            <RepeatButton Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton1}">
              <Path Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
            </RepeatButton>
            <Track Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="1">
              <Track.DecreaseRepeatButton>
                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource ScrollBarThumbVertical1}" />
              </Track.Thumb>
            </Track>
            <RepeatButton Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton1}">
              <Path Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="FrameworkElement.Width" Value="Auto" />
        <Setter Property="FrameworkElement.MinWidth" Value="0" />
        <Setter Property="FrameworkElement.Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="Bg" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Column="1" />
                <RepeatButton Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton1}">
                  <Path Name="ArrowLeft" Data="M3.18,7C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                </RepeatButton>
                <Track Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbHorizontal1}" />
                  </Track.Thumb>
                </Track>
                <RepeatButton Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton1}">
                  <Path Name="ArrowRight" Data="M1.81,7C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                </RepeatButton>
              </Grid>
              <ControlTemplate.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill" />
                </MultiDataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="GeneralMusicColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="UIElement.Visibility" Value="Collapsed" />
  </Style>
  <Style x:Key="CustomColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Background" Value="#FF444C5D" />
    <Setter Property="Control.BorderBrush" Value="#FF444C5D" />
    <Setter Property="Control.BorderThickness" Value="0" />
    <Setter Property="Control.Foreground" Value="#FF000000" />
    <Setter Property="Control.FontWeight" Value="Bold" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="True">
            <Border Name="HeaderBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" Background="{TemplateBinding Control.Background}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="7" />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed" />
                <Border Padding="{TemplateBinding Control.Padding}" Grid.RowSpan="2">
                  <ContentPresenter Name="HeaderContent" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                </Border>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="FrameworkElement.Height" Value="Auto">
              <Setter Property="FrameworkElement.MinHeight" Value="20" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="GridViewNoHeaderStyleKey" TargetType="{x:Type ScrollViewer}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <DockPanel Margin="{TemplateBinding Control.Padding}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
              <ScrollContentPresenter Name="PART_ScrollContentPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Local" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
            </DockPanel>
            <ScrollBar Name="PART_HorizontalScrollBar" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Grid.Row="1" Orientation="Horizontal" Minimum="0.0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Cursor="Arrow" Style="{StaticResource ScrollBarWithArrowsStyle}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar Name="PART_VerticalScrollBar" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Orientation="Vertical" Minimum="0.0" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Grid.Column="1" Cursor="Arrow" Style="{StaticResource ScrollBarWithArrowsStyle}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <DockPanel Grid.Row="1" LastChildFill="False" Grid.Column="1" Background="{Binding Background, ElementName=PART_VerticalScrollBar}">
              <Rectangle Width="1" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Fill="#FFFFFFFF" DockPanel.Dock="Left" />
              <Rectangle Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Height="1" Fill="#FFFFFFFF" DockPanel.Dock="Top" />
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RemoteControlScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Name="Grid" Background="#00FFFFFF">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle Name="Corner" Grid.Column="1" Fill="#00FFFFFF" Grid.Row="1" />
            <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" Margin="{TemplateBinding Control.Padding}" Grid.Row="0" />
            <ScrollBar Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Style="{StaticResource ScrollBarWithArrowsStyle}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Style="{StaticResource ScrollBarWithArrowsStyle}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer DockPanel.Dock="Top" Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                                            Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" 
                                                            AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" 
                                                            ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" 
                                                            ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" 
                                                            ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}" 
                                                            ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" 
                                                            ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" KeyboardNavigation.DirectionalNavigation="Local" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </DockPanel>
            <ScrollBar Name="PART_HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0.0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0.0" Orientation="Vertical" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <DockPanel Grid.Column="1" LastChildFill="False" Grid.Row="1" Background="{Binding Background, ElementName=PART_VerticalScrollBar}">
              <Rectangle DockPanel.Dock="Left" Fill="#FFFFFFFF" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Width="1" />
              <Rectangle DockPanel.Dock="Top" Fill="#FFFFFFFF" Height="1" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" />
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TrackListViewStyle" TargetType="{x:Type ListView}">
    <Setter Property="Control.FontFamily" Value="Arial" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.BorderThickness" Value="0,0,0,0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <ScrollViewer Padding="{TemplateBinding Control.Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="MusicListViewCellTemplateStyle">
    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=GridViewColumn}}">
      <TextBlock HorizontalAlignment="Stretch" TextBlock.TextAlignment="Center" TextTrimming="CharacterEllipsis" Text="{Binding}" />
    </Border>
  </DataTemplate>
  <Style x:Key="MusicListViewHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Border HorizontalAlignment="Stretch" Background="#FF444C5D">
            <TextBlock Text="{TemplateBinding ContentControl.Content}" Margin="40,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" TextBlock.FontSize="15pt" TextBlock.FontFamily="Arial" TextBlock.FontWeight="Bold" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MusicListViewStyle" TargetType="{x:Type ListView}">
    <Setter Property="Control.FontFamily" Value="Arial" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.BorderThickness" Value="0,0,0,0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <ScrollViewer ScrollViewer.HorizontalScrollBarVisibility="Disabled" Padding="{TemplateBinding Control.Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ListViewNoHeaderStyle" TargetType="{x:Type ListView}">
    <Setter Property="Control.FontFamily" Value="Arial" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.BorderThickness" Value="0,0,0,0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <ScrollViewer ScrollViewer.HorizontalScrollBarVisibility="Disabled" Padding="{TemplateBinding Control.Padding}" Style="{StaticResource GridViewNoHeaderStyleKey}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CustomItemContainerStyle" TargetType="{x:Type ListViewItem}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border Name="Border" BorderBrush="#FF373F44" BorderThickness="0 0 0 1" SnapsToDevicePixels="True" Background="#00FFFFFF" AllowDrop="True">
            <Interaction.Behaviors>
              <b:ItemsControlMoveItemBehavior DragDropEffect="Copy" />
            </Interaction.Behaviors>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Path Name="Path" Data="M15,0L15,20 25,10" Fill="{StaticResource BlueColorBrush}" VerticalAlignment="Center" Visibility="Hidden" />
              <GridViewRowPresenter Grid.Row="1" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Setter TargetName="Border" Property="Border.Background" Value="#FF1F252D" />
              <Setter TargetName="Path" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.ContextMenu">
      <Setter.Value>
        <ContextMenu DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
          <MenuItem Header="{Binding COM_SID_PAUSE, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.PlayOrPause}" CommandParameter="{Binding DataContext}">
            <MenuItem.Style>
              <Style TargetType="{x:Type MenuItem}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding Tag.MediaElementState}" Value="Pause">
                    <Setter Property="UIElement.Visibility" Value="Collapsed" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsSelected}" Value="False">
                    <Setter Property="UIElement.Visibility" Value="Collapsed" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </MenuItem.Style>
          </MenuItem>
          <MenuItem Header="{Binding COM_SID_PLAY, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.PlayOrPause}" CommandParameter="{Binding DataContext}">
            <MenuItem.Style>
              <Style TargetType="{x:Type MenuItem}">
                <Style.Triggers>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding IsSelected}" Value="True" />
                      <Condition Binding="{Binding Tag.MediaElementState}" Value="Play" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                      <Setter Property="UIElement.Visibility" Value="Collapsed" />
                    </MultiDataTrigger.Setters>
                  </MultiDataTrigger>
                </Style.Triggers>
              </Style>
            </MenuItem.Style>
          </MenuItem>
          <MenuItem Header="{Binding MAPP_SID_ADD_TO_QUEUE, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.AddToQl}" CommandParameter="{Binding DataContext}" />
          <MenuItem Header="{Binding MAPP_SID_PLAY_ON_TV, Source={StaticResource LocalizationSource}}" Command="{Binding Tag.PlayOnTv}" CommandParameter="{Binding DataContext}" />
        </ContextMenu>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
  </Style>
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Name="border" BorderBrush="#FF000000" BorderThickness="1" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.MouseOver.BorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PreviousOpacityButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="UIElement.Opacity" Value="0.5" />
    <Setter Property="Control.Background" Value="#FF000000" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="border" BorderBrush="#FF000000" BorderThickness="1" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ContentControl.Content">
      <Setter.Value>
        <Path Name="ArrowLeft" Data="M3.18,7C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7z" Fill="#FFFFFFFF" Margin="5" Height="40" Stretch="Uniform" />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NextOpacityButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="UIElement.Opacity" Value="0.5" />
    <Setter Property="Control.Background" Value="#FF000000" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="border" BorderBrush="#FF000000" BorderThickness="1" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ContentControl.Content">
      <Setter.Value>
        <Path Name="ArrowRight" Data="M1.81,7C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7z" Fill="#FFFFFFFF" Margin="5" Height="40" Stretch="Uniform" />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PhotoHorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
    <Setter Property="FrameworkElement.Width" Value="Auto" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="FrameworkElement.Margin" Value="0 1 0 0 " />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="30" />
              <ColumnDefinition Width="0.00001*" />
              <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>
            <RepeatButton Name="PART_LineLeftButton" Opacity="0.5" Background="#FF000000" Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource ScrollBarButton}" Height="150" Width="30">
              <Path Name="ArrowLeft" Data="M3.18,7C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7z" Fill="#FFFFFFFF" Margin="3" Stretch="Uniform" />
            </RepeatButton>
            <RepeatButton Name="PART_LineRightButton" Background="#FF000000" Opacity="0.5" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{StaticResource ScrollBarButton}" Height="150" Width="30">
              <Path Name="ArrowRight" Data="M1.81,7C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7z" Fill="#FFFFFFFF" Margin="3" Stretch="Uniform" />
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="UIElement.Opacity" Value="0.9" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="UIElement.Opacity" Value="0.9" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PhotoListBoxStyle" TargetType="{x:Type ListBox}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" BorderBrush="#00FFFFFF" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid Name="Grid" Background="{TemplateBinding Control.Background}">
                    <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" Margin="{TemplateBinding Control.Padding}" Grid.Row="0" />
                    <ScrollBar Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Style="{StaticResource PhotoHorizontalScrollBarStyle}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                      <ScrollBar.ContextMenu>
                        <ContextMenu Visibility="Collapsed" />
                      </ScrollBar.ContextMenu>
                    </ScrollBar>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              <Interaction.Behaviors>
                <b:ScrollViewerMouseWheelHorizontalScrollingBehavior />
              </Interaction.Behaviors>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="True" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ItemsPanelTemplate x:Key="PhotoPanelTemplateStyle">
    <WrapPanel IsItemsHost="True" />
  </ItemsPanelTemplate>
  <Style x:Key="PhotoListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Control.BorderThickness" Value="0" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Grid>
            <ContentPresenter HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Stretch" />
            <Border Name="Bd" BorderBrush="#00FFFFFF" BorderThickness="1" Background="#00FFFFFF" Padding="0" SnapsToDevicePixels="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource BlueColorBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6" />
  <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060" />
  <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD" />
  <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="True" Width="{TemplateBinding FrameworkElement.Width}" />
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="True" Width="{TemplateBinding FrameworkElement.Width}" />
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="QueueStyle" TargetType="{x:Type ListBox}">
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="1" SnapsToDevicePixels="True">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}" Template="{DynamicResource QueueScrollViewerControlTemplate}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="QueueScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
    <Grid Name="Grid" Background="{TemplateBinding Control.Background}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" Margin="{TemplateBinding Control.Padding}" />
      <ScrollBar Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0.0" Orientation="Vertical" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Style="{StaticResource ScrollBarWithArrowsStyle}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
    </Grid>
  </ControlTemplate>
  <Style x:Key="QueueListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Padding" Value="0,0,0,40" />
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
    <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
      <Ellipse Name="ellipse" Height="20" Width="20" Fill="#FFFFFFFF" Stretch="Fill" SnapsToDevicePixels="True" StrokeThickness="1" VerticalAlignment="Center" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
    <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TickBar Name="TopTick" Fill="{TemplateBinding Control.Foreground}" Height="6" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
        <TickBar Name="BottomTick" Fill="{TemplateBinding Control.Foreground}" Height="6" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
        <Track Name="PART_Track" Grid.Row="1">
          <Track.DecreaseRepeatButton>
            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Background="{StaticResource BlueColorBrush}" Height="6" />
          </Track.DecreaseRepeatButton>
          <Track.IncreaseRepeatButton>
            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Background="#FFD3D3D3" Height="6" />
          </Track.IncreaseRepeatButton>
          <Track.Thumb>
            <Thumb Name="Thumb" Focusable="False" Height="20" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="20" />
          </Track.Thumb>
        </Track>
      </Grid>
    </Border>
  </ControlTemplate>
  <Style x:Key="VolumeSliderStyle" TargetType="{x:Type Slider}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Control.Template" Value="{StaticResource SliderHorizontal}" />
  </Style>
  <Style x:Key="SubHeaderGridStyle" TargetType="{x:Type Grid}">
    <Setter Property="Panel.Background" Value="#FF444C5D" />
    <Setter Property="FrameworkElement.Height" Value="40" />
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,0" />
  </Style>
  <Style x:Key="SubHeaderTitileStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="TextBlock.Text" Value="{Binding Name}" />
    <Setter Property="TextBlock.Foreground" Value="#FF15181C" />
    <Setter Property="TextBlock.FontWeight" Value="Bold" />
    <Setter Property="FrameworkElement.Margin" Value="26,0,0,0" />
    <Setter Property="TextBlock.FontFamily" Value="Calibri" />
    <Setter Property="TextBlock.FontSize" Value="24pt" />
  </Style>
  <Style x:Key="RepeatChekBoxStyle" TargetType="{x:Type CheckBox}">
    <Setter Property="Control.Background" Value="{StaticResource Button.Static.BackgroundBrush}" />
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="FrameworkElement.Margin" Value="5" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid>
            <Border Name="border" BorderBrush="#FF171B1F" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="5">
              <Image Name="_image" Stretch="None" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Button.Disabled.ForegroundBrush}" Property="Control.Foreground" />
              <Setter Value="{StaticResource Button.Static.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.MouseOver.BorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="_image" Property="Image.Source" Value="/Resources/Images/repeat_all.png" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="False">
              <Setter TargetName="_image" Property="Image.Source" Value="/Resources/Images/repeat_one.png" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked">
              <Setter TargetName="_image" Property="Image.Source" Value="/Resources/Images/repeat_off.png" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RandomToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource Button.Static.BackgroundBrush}" />
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="FrameworkElement.Margin" Value="5" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <Border Name="border" BorderBrush="#FF171B1F" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="5">
              <Image Name="_image" Stretch="None" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Button.Disabled.ForegroundBrush}" Property="Control.Foreground" />
              <Setter Value="{StaticResource Button.Static.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.MouseOver.BorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="_image" Property="Image.Source" Value="/Resources/Images/shuffle_on.png" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="False">
              <Setter TargetName="_image" Property="Image.Source" Value="/Resources/Images/shuffle_off.png" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MediaPlayerPlayButtonStyle" BasedOn="{StaticResource TheMostCommonButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="ContentControl.Content">
      <Setter.Value>
        <Path Data="M0,0L15,10 0,20 0,0" Fill="#FFFFFFFF" Margin="3">
          <Path.Style>
            <Style TargetType="{x:Type Path}">
              <Style.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                  <Setter Property="Shape.Fill" Value="{StaticResource Button.Disabled.ForegroundBrush}" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="True">
                  <Setter Property="Shape.Fill" Value="#FFFFFFFF" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </Path.Style>
        </Path>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MediaPlayerPauseButtonStyle" BasedOn="{StaticResource TheMostCommonButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="ContentControl.Content">
      <Setter.Value>
        <Path Data="M0,0L5,0 5,20 0,20 0,0 M12,0L17,0 17,20 12,20" Fill="#FFFFFFFF" Margin="3">
          <Path.Style>
            <Style TargetType="{x:Type Path}">
              <Style.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                  <Setter Property="Shape.Fill" Value="{StaticResource Button.Disabled.ForegroundBrush}" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="True">
                  <Setter Property="Shape.Fill" Value="#FFFFFFFF" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </Path.Style>
        </Path>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MediaPlayerFastRewindButtonStyle" BasedOn="{StaticResource TheMostCommonButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="ContentControl.Content">
      <Setter.Value>
        <Path Data="M0,0L2,0 2,20 0,20 0,0 M12,0L12,20 2,10 12,0 M22,0L22,20 12,10 22,0">
          <Path.Style>
            <Style TargetType="{x:Type Path}">
              <Style.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                  <Setter Property="Shape.Fill" Value="{StaticResource Button.Disabled.ForegroundBrush}" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="True">
                  <Setter Property="Shape.Fill" Value="#FFFFFFFF" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </Path.Style>
        </Path>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MediaPlayerFastForwardButtonStyle" BasedOn="{StaticResource TheMostCommonButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="ContentControl.Content">
      <Setter.Value>
        <Path Data="M0,0L10,10 0,20 0,0 M10,0L20,10 10,20 10,0 M20,0L22,0 22,20 20,20 20,0">
          <Path.Style>
            <Style TargetType="{x:Type Path}">
              <Style.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                  <Setter Property="Shape.Fill" Value="{StaticResource Button.Disabled.ForegroundBrush}" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="True">
                  <Setter Property="Shape.Fill" Value="#FFFFFFFF" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </Path.Style>
        </Path>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>