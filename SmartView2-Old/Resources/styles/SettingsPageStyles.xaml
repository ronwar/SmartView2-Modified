<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:common="clr-namespace:SmartView2.Common">
  <SolidColorBrush x:Key="ColorButtonBlackBorder" Color="#171b1f" />
  <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 3 L 7 0</Geometry>
  <Style x:Key="ColorComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Chrome" CornerRadius="5" BorderThickness="0" BorderBrush="{StaticResource ColorButtonBlackBorder}" Background="{StaticResource DarkBackgroundBrush}" SnapsToDevicePixels="True">
            <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
              <Path Name="Arrow" Data="{StaticResource DownArrowGeometry}" Stroke="#FFFFFFFF" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ColorComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="FrameworkElement.Margin" Value="3" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border Name="Bd" BorderBrush="#FF000000" BorderThickness="1" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="#FF4BA0DC" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ColorComboBoxStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Top" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Foreground" Value="{StaticResource Button.Static.ForegroundBrush}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource ColorButtonBlackBorder}" />
    <Setter Property="Control.BorderThickness" Value="0" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="FrameworkElement.Margin" Value="5 0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" VerticalOffset="0" Placement="Bottom" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <Border Name="DropDownBorder" CornerRadius="5" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" BorderBrush="#FF171B1F" BorderThickness="1" Background="#FF323B48" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                <ScrollViewer Name="DropDownScrollViewer">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                      <Rectangle Name="OpaqueRect" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                    </Canvas>
                    <ItemsPresenter Name="ItemsPresenter" Margin="0" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                  </Grid>
                </ScrollViewer>
              </Border>
            </Popup>
            <ToggleButton BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2" Style="{StaticResource ColorComboBoxToggleButton}" Width="{TemplateBinding FrameworkElement.ActualWidth}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" Content="{TemplateBinding ComboBox.SelectionBoxItem}" HorizontalAlignment="Stretch" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Stretch" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Button.Disabled.ForegroundBrush}" Property="Control.Foreground" />
              <Setter Value="{StaticResource Button.Static.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
              <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" Property="Canvas.Top" />
              <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA" />
  <DataTemplate x:Key="ColorItemTemplate">
    <Rectangle Height="20" Width="20">
      <Rectangle.Fill>
        <SolidColorBrush Color="{Binding}" />
      </Rectangle.Fill>
    </Rectangle>
  </DataTemplate>
  <ItemsPanelTemplate x:Key="ColorItemsPanelTemplate">
    <UniformGrid Columns="5" />
  </ItemsPanelTemplate>
  <Style x:Key="SettingsHeaderTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
    <Setter Property="TextBlock.TextTrimming" Value="None" />
    <Setter Property="TextBlock.Background" Value="#FF444C5D" />
    <Setter Property="TextBlock.Foreground" Value="#FF000000" />
    <Setter Property="TextBlock.FontWeight" Value="Bold" />
    <Setter Property="TextBlock.Padding" Value="10 5" />
    <Setter Property="TextBlock.FontSize" Value="12" />
    <Setter Property="TextBlock.FontFamily" Value="Arial" />
  </Style>
  <Style x:Key="SettingsComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="helperBorder" BorderBrush="#FF000000" Background="{StaticResource DarkBackgroundBrush}" CornerRadius="5">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="10" />
              </Grid.ColumnDefinitions>
              <Border Name="aditionalBorder" Grid.Column="1" Background="#00FFFFFF" CornerRadius="0 5 5 0">
                <Path Data="{StaticResource DownArrowGeometry}" Stroke="#FFFFFFFF" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center" />
              </Border>
              <Border Name="templateRoot" Grid.Column="0" Background="#00FFFFFF" SnapsToDevicePixels="True" CornerRadius="5 0 0 5" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="helperBorder" Property="Border.CornerRadius" Value="5 5 0 0" />
            </Trigger>
            <DataTrigger Value="true" Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType=ComboBox}}">
              <Setter TargetName="templateRoot" Property="Border.Background" Value="#FF151B25" />
              <Setter TargetName="aditionalBorder" Property="Border.Background" Value="#FF151B25" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="SettingsComboBoxTemplate" TargetType="{x:Type ComboBox}">
    <ControlTemplate.Resources>
      <common:RectConverter x:Key="rectConverter" Offset="0 0 -2 0" />
      <common:RectConverter x:Key="rectConverterWithOffset" Offset="0 0 -2 -12" />
    </ControlTemplate.Resources>
    <Grid Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
        <ScrollViewer Name="DropDownScrollViewer">
          <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
            <Border Name="dropDownBorder" BorderBrush="{StaticResource DarkBackgroundBrush}" CornerRadius="0 0 5 5" BorderThickness="1 0 1 1" Background="{StaticResource DarkBackgroundBrush}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" SnapsToDevicePixels="True" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
              <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                <ItemsPresenter.Clip>
                  <CombinedGeometry GeometryCombineMode="Union">
                    <CombinedGeometry.Geometry1>
                      <RectangleGeometry>
                        <RectangleGeometry.Rect>
                          <MultiBinding Converter="{StaticResource rectConverterWithOffset}">
                            <Binding Path="ActualWidth" ElementName="dropDownBorder" />
                            <Binding Path="ActualHeight" ElementName="dropDownBorder" />
                          </MultiBinding>
                        </RectangleGeometry.Rect>
                      </RectangleGeometry>
                    </CombinedGeometry.Geometry1>
                    <CombinedGeometry.Geometry2>
                      <RectangleGeometry RadiusX="11" RadiusY="11">
                        <RectangleGeometry.Rect>
                          <MultiBinding Converter="{StaticResource rectConverter}">
                            <Binding Path="ActualWidth" ElementName="dropDownBorder" />
                            <Binding Path="ActualHeight" ElementName="dropDownBorder" />
                          </MultiBinding>
                        </RectangleGeometry.Rect>
                      </RectangleGeometry>
                    </CombinedGeometry.Geometry2>
                  </CombinedGeometry>
                </ItemsPresenter.Clip>
              </ItemsPresenter>
            </Border>
          </Grid>
        </ScrollViewer>
      </Popup>
      <ToggleButton Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2" Style="{StaticResource SettingsComboBoxToggleButton}" Foreground="#FFFFFFFF" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
      <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="10 5 10 5" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ItemsControl.HasItems" Value="False">
        <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ItemsControl.IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="SettingsComboBoxStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="Control.FontFamily" Value="Arial" />
    <Setter Property="Control.FontSize" Value="14" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Control.Padding" Value="6,3,5,3" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template" Value="{StaticResource SettingsComboBoxTemplate}" />
    <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource SettingsComboBoxItemStyle1}" />
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="{StaticResource Button.Disabled.ForegroundBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource Button.Static.BackgroundBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="SettingsComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="Control.FontFamily" Value="Arial" />
    <Setter Property="Control.FontSize" Value="14" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Grid>
            <Border Name="Border" Background="#00FFFFFF" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0">
              <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="10 5 10 5" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
              <Setter Value="{StaticResource selectedAndOverBrush}" TargetName="Border" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource DarkBackgroundBrush}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>