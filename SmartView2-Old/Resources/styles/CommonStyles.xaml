<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:common="clr-namespace:SmartView2.Common" xmlns:properties="clr-namespace:SmartView2.Properties">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="WindowStyle.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <common:BoolToBoolNegativeConverter x:Key="BoolToBoolNegativeConverter" />
  <SolidColorBrush x:Key="selectedAndOverBrush" Color="#FF4fb2f6" />
  <SolidColorBrush x:Key="DarkBackgroundBrush" Color="#FF2A313B" />
  <SolidColorBrush x:Key="LightBackgroundBrush" Color="#FF323B47" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#FF191E28" />
  <SolidColorBrush x:Key="DarkButton.Static.BackgroundBrush" Color="#FF141B24" />
  <SolidColorBrush x:Key="Button.Static.BackgroundBrush" Color="#FF2A313B" />
  <SolidColorBrush x:Key="Button.Static.ForegroundBrush" Color="White" />
  <SolidColorBrush x:Key="Button.Disabled.ForegroundBrush" Color="#1b2025" />
  <SolidColorBrush x:Key="Button.MouseOver.BorderBrush" Color="#FF4fb2f6" />
  <SolidColorBrush x:Key="Button.Pressed.BackgroundBrush" Color="#FF4fb2f6" />
  <SolidColorBrush x:Key="Window.Text.ForegroundBrush" Color="#C6C7C8" />
  <SolidColorBrush x:Key="ScrollBarThumb.Static.BackgroundBrush" Color="#1b2025" />
  <SolidColorBrush x:Key="TextBlock.Static.ForegroundBrush" Color="White" />
  <SolidColorBrush x:Key="TextBlock.Selected.ForegroundBrush" Color="#FF4fb2f6" />
  <Color x:Key="HeaderBackground">#1C1F24</Color>
  <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="{StaticResource HeaderBackground}" />
  <Color x:Key="InnerPanelsBgr">#333947</Color>
  <SolidColorBrush x:Key="InnerPanelsBgrBrush" Color="{StaticResource InnerPanelsBgr}" />
  <Color x:Key="InnerLittleBorders">#242A38</Color>
  <SolidColorBrush x:Key="InnerLittleBordersBrush" Color="{StaticResource InnerLittleBorders}" />
  <BitmapImage x:Key="FullScreenImage" UriSource="/Resources/Images/fullscreen_icon_normal.png" />
  <BitmapImage x:Key="ExitFullScreenImage" UriSource="/Resources/Images/exit_fullscreen_icon.png" />
  <Style x:Key="CommonButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="0,20,0,20" />
    <Setter Property="Control.FontWeight" Value="Bold" />
    <Setter Property="Button.IsDefault" Value="True" />
  </Style>
  <Style x:Key="Background" TargetType="{x:Type Grid}">
    <Setter Property="Panel.Background" Value="#FF323B48" />
  </Style>
  <Style x:Key="CommonHeaderTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="TextBlock.Foreground" Value="{StaticResource TextBlock.Static.ForegroundBrush}" />
    <Setter Property="TextBlock.FontSize" Value="18" />
    <Setter Property="TextBlock.FontFamily" Value="Arial" />
  </Style>
  <Grid x:Key="closeButtonPath" MaxHeight="9" MaxWidth="9">
    <Path StrokeThickness="1.5" Stretch="None" Data="M0,0L8,8 M0,8L8,0" Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
  </Grid>
  <Style x:Key="HeaderCloseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TitleBarButtonStyle}">
    <Setter Property="Control.Background" Value="#FF990E11" />
    <Setter Property="FrameworkElement.Height" Value="22" />
    <Setter Property="FrameworkElement.Width" Value="22" />
    <Setter Property="FrameworkElement.Margin" Value="0 0 0 5" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="ContentControl.Content" Value="{StaticResource closeButtonPath}" />
  </Style>
  <Style x:Key="TheMostCommonButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.Background" Value="{StaticResource Button.Static.BackgroundBrush}" />
    <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="FrameworkElement.Margin" Value="5" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border Name="border" BorderBrush="#FF171B1F" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="5">
              <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Button.Disabled.ForegroundBrush}" Property="Control.Foreground" />
              <Setter Value="{StaticResource Button.Static.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource Button.Pressed.BackgroundBrush}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Value="{StaticResource Button.MouseOver.BorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PopupBorderStyle" TargetType="{x:Type Border}">
    <Setter Property="Border.Background" Value="#FF323B48" />
    <Setter Property="Border.BorderBrush" Value="{StaticResource HeaderBackgroundBrush}" />
    <Setter Property="Border.BorderThickness" Value="5" />
  </Style>
  <GeometryGroup x:Key="BackButtonGeometryGroup">
    <PathGeometry Figures="M 85 40 L 70 60 L 85 80" />
  </GeometryGroup>
  <GeometryGroup x:Key="RefreshButtonGeometryGroup">
    <PathGeometry Figures="M 0 5 A 5 5 0 0 0 10 5 A 5 5 0 0 0 5 0 M 6.3 0.9 L 5 0 L 6.5 -0.4" />
  </GeometryGroup>
  <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#FF000000" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Foreground" Value="{StaticResource Button.Static.ForegroundBrush}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Padding" Value="5" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border BorderBrush="#00FFFFFF" Background="#00FFFFFF" SnapsToDevicePixels="True">
              <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{StaticResource selectedAndOverBrush}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="RadioButton.Static.BackgroundBrush" Color="#FF1C2025" />
  <SolidColorBrush x:Key="RadioButton.Static.BorderBrush" Color="#FF1C2025" />
  <SolidColorBrush x:Key="RadioButton.MouseOver.BackgroundBrush" Color="#FF4fb2f6" />
  <SolidColorBrush x:Key="RadioButton.Disabled.ForegroundBrush" Color="#FF1C2025" />
  <SolidColorBrush x:Key="RadioButton.Disabled.GlyphBrush" Color="#FF707070" />
  <SolidColorBrush x:Key="RadioButton.Pressed.BackgroundBrush" Color="#FF4fb2f6" />
  <SolidColorBrush x:Key="RadioButton.Static.GlyphBrush" Color="#FF4fb2f6" />
  <SolidColorBrush x:Key="RadioButton.Static.ForegroundBrush" Color="White" />
  <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
    <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.BackgroundBrush}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.BorderBrush}" />
    <Setter Property="Control.Foreground" Value="{StaticResource RadioButton.Static.ForegroundBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.FontSize" Value="16" />
    <Setter Property="Control.FontFamily" Value="Arial" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <Grid Name="templateRoot" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,1,5,1" VerticalAlignment="Center">
              <Grid Name="markGrid" Margin="2">
                <Ellipse Name="optionMark" Fill="{StaticResource RadioButton.Static.GlyphBrush}" MinWidth="14" MinHeight="14" Opacity="0" />
              </Grid>
            </Border>
            <ContentPresenter Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="templateRoot" Value="{StaticResource RadioButton.MouseOver.BackgroundBrush}" Property="Panel.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource RadioButton.Disabled.ForegroundBrush}" Property="Control.Foreground" />
              <Setter TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.GlyphBrush}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="templateRoot" Value="{StaticResource RadioButton.Pressed.BackgroundBrush}" Property="Panel.Background" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RadioButtonStyleWithoutMouseOver" TargetType="{x:Type RadioButton}">
    <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.BackgroundBrush}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.BorderBrush}" />
    <Setter Property="Control.Foreground" Value="{StaticResource RadioButton.Static.ForegroundBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.FontSize" Value="16" />
    <Setter Property="Control.FontFamily" Value="Arial" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <Grid Name="templateRoot" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,1,5,1" VerticalAlignment="Center">
              <Grid Name="markGrid" Margin="2">
                <Ellipse Name="optionMark" Fill="{StaticResource RadioButton.Static.GlyphBrush}" MinWidth="8" MinHeight="8" Opacity="0" />
              </Grid>
            </Border>
            <ContentPresenter Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource RadioButton.Disabled.ForegroundBrush}" Property="Control.Foreground" />
              <Setter TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.GlyphBrush}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="templateRoot" Value="{StaticResource RadioButton.Pressed.BackgroundBrush}" Property="Panel.Background" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="TabRadioButton.Static.ForegroundBrush" Color="Gray" />
  <SolidColorBrush x:Key="TabRadioButton.Checked.ForegroundBrush" Color="White" />
  <SolidColorBrush x:Key="TabRadioButton.Disabled.BoderBrush" Color="#FF1C2025" />
  <Style x:Key="HorizontalTabRadioButtonStyle" TargetType="{x:Type RadioButton}">
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.BackgroundBrush}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.BorderBrush}" />
    <Setter Property="Control.Foreground" Value="{StaticResource TabRadioButton.Static.ForegroundBrush}" />
    <Setter Property="Control.FontSize" Value="16" />
    <Setter Property="Control.FontFamily" Value="Arial" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <Grid Name="templateRoot" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border Name="selectedBorder" BorderThickness="2">
              <ContentPresenter Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
            </Border>
            <Border Name="checkedBorder" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" BorderBrush="#00FFFFFF" BorderThickness="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="selectedBorder" Value="{StaticResource RadioButton.MouseOver.BackgroundBrush}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Value="{StaticResource TabRadioButton.Checked.ForegroundBrush}" Property="Control.Foreground" />
              <Setter TargetName="checkedBorder" Value="{StaticResource RadioButton.MouseOver.BackgroundBrush}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource RadioButton.Disabled.ForegroundBrush}" Property="Control.Foreground" />
              <Setter TargetName="selectedBorder" Value="{StaticResource TabRadioButton.Disabled.BoderBrush}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource RadioButton.Pressed.BackgroundBrush}" Property="Control.Background" />
              <Setter TargetName="selectedBorder" Value="{StaticResource RadioButton.MouseOver.BackgroundBrush}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="WindowHeaderStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left" />
    <Setter Property="TextBlock.Foreground" Value="{StaticResource Window.Text.ForegroundBrush}" />
    <Setter Property="TextBlock.FontSize" Value="16" />
    <Setter Property="TextBlock.FontFamily" Value="Arial" />
    <Setter Property="FrameworkElement.Margin" Value="5,0,0,0" />
  </Style>
  <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Border Background="#FFB5CED6" CornerRadius="5">
            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <RadialGradientBrush x:Key="backgroundGradientBrush" Center="0.5 0.5" GradientOrigin="0.5,0.6" RadiusX="0.5" RadiusY="0.5">
    <GradientStop Color="#FF303740" Offset="0.0" />
    <GradientStop Color="#FF282A34" Offset="1.0" />
  </RadialGradientBrush>
  <ImageBrush x:Key="commonGradientBackground" />
  <x:StaticExtension x:Key="LocalizationSource" Member="properties:ResourcesModel.Instanse" />
  <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="1" SnapsToDevicePixels="True">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="True" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PlaceHolderTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Background" Value="{StaticResource DarkBackgroundBrush}" />
    <Setter Property="Control.Foreground" Value="#FF979DA3" />
    <Setter Property="Control.FontSize" Value="15pt" />
    <Setter Property="Control.FontFamily" Value="Arial" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" Padding="14,0">
            <Grid>
              <TextBlock Name="_helpText" TextBlock.Foreground="#FF808080" Visibility="Collapsed" Text="{TemplateBinding FrameworkElement.Tag}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" />
              <TextBlock Name="_cacheText" TextBlock.Foreground="#00FFFFFF" Text="{TemplateBinding TextBox.Text}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" />
              <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Value="0" Binding="{Binding Path=Text.Length, ElementName=_cacheText}">
              <Setter TargetName="_helpText" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CommonCheckBoxStyle" TargetType="{x:Type CheckBox}">
    <Setter Property="Control.Background" Value="{StaticResource DarkBackgroundBrush}" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Control.Foreground" Value="#FFCCCED1" />
    <Setter Property="Control.FontSize" Value="15pt" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid Name="templateRoot" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Name="checkBoxBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
              <Grid Name="markGrid" Height="12" Width="12">
                <Path Name="optionMark" Data="M13.161443,1.6820551L6.1991513,12.509939 5.966058,12.509939 0,7.1406424 1.684457,4.842161 5.614241,8.3712675 10.995349,2.0980383E-05 13.161443,1.6820551z" Fill="#FFFFFFFF" Margin="0,0.833,-1.833,-3.333" Opacity="0" Stretch="None" />
                <Rectangle Name="indeterminateMark" Fill="#FF000000" Margin="2" Opacity="0" />
              </Grid>
            </Border>
            <ContentPresenter Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="4,-5.668,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="True">
              <Setter Property="Control.Padding" Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="1" />
              <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="0" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked">
              <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="0" />
              <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>